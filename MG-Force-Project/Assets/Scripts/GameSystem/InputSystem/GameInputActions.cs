//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Scripts/GameSystem/InputSystem/GameInputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @GameInputActions: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @GameInputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""GameInputActions"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""5de680c5-0116-488c-bcd2-c0232f4e02a3"",
            ""actions"": [
                {
                    ""name"": ""Action"",
                    ""type"": ""Button"",
                    ""id"": ""ffdffef9-0521-4c13-8292-1f9b53a22f78"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LeftMove"",
                    ""type"": ""Button"",
                    ""id"": ""7d753514-22d3-4ce6-8282-bc0a778ce828"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightMove"",
                    ""type"": ""Button"",
                    ""id"": ""0b84e804-fee9-42f3-83da-a0c757829976"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""0a027bda-811b-44c9-b095-2a61b5077192"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MenuOpen"",
                    ""type"": ""Button"",
                    ""id"": ""b3b14a28-f6df-4b60-afd7-232e63967b62"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ViewModeStart"",
                    ""type"": ""Button"",
                    ""id"": ""3e30f52f-6198-4625-8fbd-c18574076314"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MagnetBoot"",
                    ""type"": ""Button"",
                    ""id"": ""45c9a20a-4968-48b9-8b6f-5bd2f5ddb16a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""6d1559a0-5fb1-41f6-9a9a-fd4aa923ce8c"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyMouse"",
                    ""action"": ""LeftMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ff44e604-54b3-47f8-b266-f26e1b91291e"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyMouse"",
                    ""action"": ""LeftMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6a0aa4fd-a464-4f63-8edf-6661befb788b"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad;Gamepad_2"",
                    ""action"": ""LeftMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e31c8199-20a7-4129-8ede-e52b19ec7729"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyMouse"",
                    ""action"": ""RightMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4637eaaf-f5e1-4e25-adad-54470dcda532"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyMouse"",
                    ""action"": ""RightMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d5214d64-62ee-45a4-9c42-2ce4a943433a"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad;Gamepad_2"",
                    ""action"": ""RightMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""89338c96-a8db-4754-9569-8d6c4206d815"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyMouse"",
                    ""action"": ""Action"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cceee815-7287-4466-b134-ac881276cd46"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Action"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""869e9713-dcd8-4a2a-82ba-856f7756df20"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad_2"",
                    ""action"": ""Action"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0aa715eb-6ec6-4976-a681-07cd8a152df4"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyMouse"",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a32d47a7-15b3-4f64-822f-f35fff8e2e7a"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ef6d5b3c-4396-4ece-b494-dfb31a1c664b"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad_2"",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ec013321-fb03-44ad-87cb-a9cedd83cfa2"",
                    ""path"": ""<Keyboard>/m"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyMouse"",
                    ""action"": ""MenuOpen"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bd88366a-22af-424b-9f7f-1266e82aa8fb"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad;Gamepad_2"",
                    ""action"": ""MenuOpen"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""81b12448-5bca-40d9-a70f-3a5e2dcd172b"",
                    ""path"": ""<Keyboard>/v"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyMouse"",
                    ""action"": ""ViewModeStart"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1d696035-d891-4f81-886f-ba4d66b3d261"",
                    ""path"": ""<Gamepad>/rightStickPress "",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad;Gamepad_2"",
                    ""action"": ""ViewModeStart"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c53c5730-d2fb-4841-8989-fec9edb51608"",
                    ""path"": ""<Keyboard>/b"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyMouse"",
                    ""action"": ""MagnetBoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""47966c24-c98b-45f5-aa8a-f2ccd84cc6e1"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad;Gamepad_2"",
                    ""action"": ""MagnetBoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Magnet"",
            ""id"": ""20ddd3e3-e6f6-4474-b1a9-32100f98d70d"",
            ""actions"": [
                {
                    ""name"": ""ShootAngle"",
                    ""type"": ""Value"",
                    ""id"": ""f86060a6-7fe4-403b-b9d0-307e2070ff61"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Shoot"",
                    ""type"": ""Button"",
                    ""id"": ""273f5518-fcb2-46f7-a341-751d82df7cb8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PowerCharge"",
                    ""type"": ""Button"",
                    ""id"": ""6010c015-fa7b-4050-a534-10c874bf4b03"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Hold"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PoleSwitching"",
                    ""type"": ""Button"",
                    ""id"": ""70611ca8-d43d-45f9-a23b-e3550b24eb3e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Reset"",
                    ""type"": ""Button"",
                    ""id"": ""6c59df5d-bd63-4f59-8d8e-09921acf6de6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""48ea5372-375b-4e72-8c6b-be28b037b2a0"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyMouse"",
                    ""action"": ""PoleSwitching"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7c0051e3-19d2-491d-9b35-65af5a5bd9ea"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad;Gamepad_2"",
                    ""action"": ""PoleSwitching"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0be8c1da-eaf1-4df4-80ce-16e4257d2c63"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyMouse"",
                    ""action"": ""PowerCharge"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8075481d-2126-4d3e-9a1e-cc808b251c19"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad;Gamepad_2"",
                    ""action"": ""PowerCharge"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e3f2c21a-0f01-4452-8ad0-b6b9efd4de25"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyMouse"",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2e80e8aa-9918-43ce-842b-d14f39c1bd79"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyMouse"",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3312a22d-3b0f-4d7c-b412-396dd13f7a9e"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad;Gamepad_2"",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b8a0ce98-f06d-4e1b-94af-afeb338c6822"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyMouse"",
                    ""action"": ""ShootAngle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e0ca6a37-2f37-4f61-b6ed-d7dbdce804ad"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad;Gamepad_2"",
                    ""action"": ""ShootAngle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f670d2a5-0ebd-4278-aa53-5b932ae2959e"",
                    ""path"": ""<Keyborad>/R"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyMouse"",
                    ""action"": ""Reset"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""502b23c9-0746-4121-a4d3-e8766d7b5182"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Reset"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0c687d31-b19f-4508-b935-7fc72e08b0d5"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad_2"",
                    ""action"": ""Reset"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Camera"",
            ""id"": ""d24e8da8-ade3-4bcc-ad28-f9dfb083239d"",
            ""actions"": [
                {
                    ""name"": ""ViewModeEnd"",
                    ""type"": ""Button"",
                    ""id"": ""4bd2fa1e-e8c3-4cfd-9514-605f7dd31d63"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ViewMove"",
                    ""type"": ""Value"",
                    ""id"": ""2f34e169-5146-4fe1-8f60-8ce192e90845"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""431e7c71-b07e-484f-a767-3d459de86e2f"",
                    ""path"": ""<Keyboard>/v"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyMouse"",
                    ""action"": ""ViewModeEnd"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4c900af9-1e75-4ac7-a3cf-cdcfa75a18c8"",
                    ""path"": ""<Keyboard>/backspace"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyMouse"",
                    ""action"": ""ViewModeEnd"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a7cf294d-070b-46f7-a47b-3a41cbb0712c"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""ViewModeEnd"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""562e8934-6b15-4249-b57e-56b302581d5c"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad_2"",
                    ""action"": ""ViewModeEnd"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0f61da18-3ccf-474c-8d61-1492f7bfae8a"",
                    ""path"": ""<Gamepad>/rightStickPress "",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad;Gamepad_2"",
                    ""action"": ""ViewModeEnd"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""9272d9f0-fc28-46ab-954c-f6e2ae45c787"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ViewMove"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""04984666-bd55-4ebc-aafd-5c8eed5f874b"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyMouse"",
                    ""action"": ""ViewMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""67010bc5-6e6e-4b7d-8e9f-1b867561f29d"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyMouse"",
                    ""action"": ""ViewMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""98a00034-d8d4-4083-926a-e8a210ccfedd"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyMouse"",
                    ""action"": ""ViewMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""abf32781-870a-453c-8d23-92578c7b5b2c"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyMouse"",
                    ""action"": ""ViewMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""60a71934-1177-4497-9ea3-ee260fc9a1fb"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ViewMove"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""50d9d3c4-db14-4326-9e75-0fc7613b1c08"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyMouse"",
                    ""action"": ""ViewMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""9b2b13fe-6d85-4dea-849a-c369f94cea74"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyMouse"",
                    ""action"": ""ViewMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""b5101e80-e447-4cb7-9b8c-510fecc04877"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyMouse"",
                    ""action"": ""ViewMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""69dca6aa-7eee-46c5-a1ae-b9016c57962c"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyMouse"",
                    ""action"": ""ViewMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""28111f07-f33c-48ce-9ccd-452d1d307840"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad;Gamepad_2"",
                    ""action"": ""ViewMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Menu"",
            ""id"": ""b2547cae-98fb-4a81-a752-8fe0258c5d78"",
            ""actions"": [
                {
                    ""name"": ""Close"",
                    ""type"": ""Button"",
                    ""id"": ""050ff628-8ad3-404b-aa37-471ff068135c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Decision"",
                    ""type"": ""Button"",
                    ""id"": ""1b099ebc-ced3-43dd-b50b-7d00e78f7127"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Back"",
                    ""type"": ""Button"",
                    ""id"": ""3c607b68-70e3-4780-a3f7-d27866a677e7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LeftSelect"",
                    ""type"": ""Button"",
                    ""id"": ""49bf61b4-4030-4c86-8de7-b3d7daf3f974"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightSelect"",
                    ""type"": ""Button"",
                    ""id"": ""f2fab7de-65a8-4828-ba38-1f670609f717"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""UpSelect"",
                    ""type"": ""Button"",
                    ""id"": ""de8ccd70-47dd-41a5-8963-6d3110aebbec"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DownSelect"",
                    ""type"": ""Button"",
                    ""id"": ""68afc567-b23a-4e2a-99f1-6e8fd4dce77c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""feab3783-cb61-469c-a2e1-806ca66ca24a"",
                    ""path"": ""<Keyboard>/m"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyMouse"",
                    ""action"": ""Close"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""faf11131-0234-4edc-9e8f-1134e700fdd6"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyMouse"",
                    ""action"": ""Close"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4902b6be-803a-4ae6-808d-65f63bb84c7e"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad;Gamepad_2"",
                    ""action"": ""Close"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ccce6447-deb1-4140-a124-ae4353a7342d"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyMouse"",
                    ""action"": ""Decision"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""90f07683-cef1-481a-8715-212296c91f36"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Decision"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a92dd763-d437-4d2c-bf61-0c8d36e6bd3b"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad_2"",
                    ""action"": ""Decision"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""40da29f4-c29d-46b2-82b1-ee298449f853"",
                    ""path"": ""<Keyboard>/backspace"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyMouse"",
                    ""action"": ""Back"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ec6669fa-0ee5-465f-877a-f5c7917e06f9"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Back"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0ee06eca-5b78-44fc-bd3f-38a74efbccd1"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad_2"",
                    ""action"": ""Back"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bf4f9b40-ebe6-45db-8015-329dccf0862f"",
                    ""path"": ""<Keyboard>/A"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyMouse"",
                    ""action"": ""LeftSelect"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3996bf1a-cdd6-438f-85fb-2631ed57d5d8"",
                    ""path"": ""<Keyboard>/leftarrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyMouse"",
                    ""action"": ""LeftSelect"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d654e903-37a8-48b8-a481-39a1ba2eb80a"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad;Gamepad_2"",
                    ""action"": ""LeftSelect"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e5711528-3b9e-4b6b-b68c-da676ddd8323"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad_2;Gamepad"",
                    ""action"": ""LeftSelect"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""26664558-6064-46ae-a44c-42b0639dab8e"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyMouse"",
                    ""action"": ""RightSelect"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""212b5e0d-8261-4fe2-aff9-fb7c12ba2de0"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyMouse"",
                    ""action"": ""RightSelect"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""15d20de5-e0bb-4927-8db8-d7b450a5ee46"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad;Gamepad_2"",
                    ""action"": ""RightSelect"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""acde2687-f472-4ae3-a1c5-d833868fe321"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad;Gamepad_2"",
                    ""action"": ""RightSelect"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f5da25ca-3f96-4e4b-a0d8-302333b6de3c"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyMouse"",
                    ""action"": ""UpSelect"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d820598b-a7b8-4219-b8da-a35a9ab6ba4a"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyMouse"",
                    ""action"": ""UpSelect"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c46ab255-93f4-4606-98ad-e12b5d534976"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad;Gamepad_2"",
                    ""action"": ""UpSelect"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a10ca6f1-3aed-47f3-a928-70b75e2169bd"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad;Gamepad_2"",
                    ""action"": ""UpSelect"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d13a103a-a685-4972-bd6d-5f3c25b4e8af"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyMouse"",
                    ""action"": ""DownSelect"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b7d96e2c-026b-4675-b560-af34ded01bff"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyMouse"",
                    ""action"": ""DownSelect"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""883c3401-95a5-41a8-aea2-2d69c6a0f282"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad;Gamepad_2"",
                    ""action"": ""DownSelect"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bf2e2b75-c089-4c93-a891-0dc84c3debc0"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad;Gamepad_2"",
                    ""action"": ""DownSelect"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Shortcut"",
            ""id"": ""6d50c6dd-15e7-4da5-908d-ab5d612c29e1"",
            ""actions"": [
                {
                    ""name"": ""ShortCut_1"",
                    ""type"": ""Button"",
                    ""id"": ""35a7d147-05a8-4b79-a02e-589df679b3fe"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ShortCut_2"",
                    ""type"": ""Button"",
                    ""id"": ""d1384f82-b630-40f0-8a7b-954502e1ab8f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ShortCut_3"",
                    ""type"": ""Button"",
                    ""id"": ""b2b32f1c-b7cd-4ff9-8a9d-1476a93cce4d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ShortCut_4"",
                    ""type"": ""Button"",
                    ""id"": ""11a21c80-ed04-4d75-a6dd-442df08c5cee"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""dca733f3-488d-4400-927a-eb2ced907612"",
                    ""path"": ""<Keyboard>/f1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyMouse"",
                    ""action"": ""ShortCut_1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""77d9ee29-f762-4bf5-82ab-dae028a37a84"",
                    ""path"": ""<Keyboard>/f2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyMouse"",
                    ""action"": ""ShortCut_2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ee6d8cc7-ddff-4841-9c6e-e0b17d39e2fa"",
                    ""path"": ""<Keyboard>/f3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyMouse"",
                    ""action"": ""ShortCut_3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3cd5de12-4b98-4fb5-82a8-d5327bb9c206"",
                    ""path"": ""<Keyboard>/f4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyMouse"",
                    ""action"": ""ShortCut_4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Debug"",
            ""id"": ""44529aae-1b95-4893-9eae-eb9ce90eabba"",
            ""actions"": [
                {
                    ""name"": ""ReSet"",
                    ""type"": ""Button"",
                    ""id"": ""d4153a59-7e09-456b-8de3-a708b811d716"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ReUpdate"",
                    ""type"": ""Button"",
                    ""id"": ""28a497cd-c0ed-44f7-bb94-6e8f5a696c9f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""NextUpdate"",
                    ""type"": ""Button"",
                    ""id"": ""f54c5c66-89fb-4f28-95db-be387e961911"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Two Modifiers"",
                    ""id"": ""bceb9a5b-d207-47bf-88c7-f8f018b479cb"",
                    ""path"": ""TwoModifiers"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ReSet"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier1"",
                    ""id"": ""a6167fe6-e304-4a2a-97bc-9b9a6d38b48b"",
                    ""path"": ""<Keyboard>/m"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyMouse"",
                    ""action"": ""ReSet"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""modifier2"",
                    ""id"": ""be518209-7e74-4dec-8cac-b56c8e3a8263"",
                    ""path"": ""<Keyboard>/0"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyMouse"",
                    ""action"": ""ReSet"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""79abcff9-84c7-49de-b7fb-3947fa2a5474"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyMouse"",
                    ""action"": ""ReSet"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Two Modifiers"",
                    ""id"": ""fedd47ad-11ab-4a6c-8790-72cb7d956ea0"",
                    ""path"": ""TwoModifiers"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ReUpdate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier1"",
                    ""id"": ""706bf3fe-c2e7-47c5-9cd6-9585972aca5a"",
                    ""path"": ""<Keyboard>/m"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyMouse"",
                    ""action"": ""ReUpdate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""modifier2"",
                    ""id"": ""f598ed2a-9d65-4509-af56-871c2eb6292b"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyMouse"",
                    ""action"": ""ReUpdate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""86fcc398-d71f-4981-a501-5e5aeb94a244"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyMouse"",
                    ""action"": ""ReUpdate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Two Modifiers"",
                    ""id"": ""c724458e-95f1-4d47-87ea-b9b4552560a7"",
                    ""path"": ""TwoModifiers"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NextUpdate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier1"",
                    ""id"": ""68141e4c-2216-4a22-8f8d-e703e5bbaca2"",
                    ""path"": ""<Keyboard>/m"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyMouse"",
                    ""action"": ""NextUpdate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""modifier2"",
                    ""id"": ""db7a6856-1fc8-4b54-bfa2-7bb1776196b7"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyMouse"",
                    ""action"": ""NextUpdate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""826cf9c6-5f5c-468e-859a-c7dbb6e63bc1"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyMouse"",
                    ""action"": ""NextUpdate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""KeyMouse"",
            ""bindingGroup"": ""KeyMouse"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Gamepad"",
            ""bindingGroup"": ""Gamepad"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Gamepad_2"",
            ""bindingGroup"": ""Gamepad_2"",
            ""devices"": []
        }
    ]
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Action = m_Player.FindAction("Action", throwIfNotFound: true);
        m_Player_LeftMove = m_Player.FindAction("LeftMove", throwIfNotFound: true);
        m_Player_RightMove = m_Player.FindAction("RightMove", throwIfNotFound: true);
        m_Player_Jump = m_Player.FindAction("Jump", throwIfNotFound: true);
        m_Player_MenuOpen = m_Player.FindAction("MenuOpen", throwIfNotFound: true);
        m_Player_ViewModeStart = m_Player.FindAction("ViewModeStart", throwIfNotFound: true);
        m_Player_MagnetBoot = m_Player.FindAction("MagnetBoot", throwIfNotFound: true);
        // Magnet
        m_Magnet = asset.FindActionMap("Magnet", throwIfNotFound: true);
        m_Magnet_ShootAngle = m_Magnet.FindAction("ShootAngle", throwIfNotFound: true);
        m_Magnet_Shoot = m_Magnet.FindAction("Shoot", throwIfNotFound: true);
        m_Magnet_PowerCharge = m_Magnet.FindAction("PowerCharge", throwIfNotFound: true);
        m_Magnet_PoleSwitching = m_Magnet.FindAction("PoleSwitching", throwIfNotFound: true);
        m_Magnet_Reset = m_Magnet.FindAction("Reset", throwIfNotFound: true);
        // Camera
        m_Camera = asset.FindActionMap("Camera", throwIfNotFound: true);
        m_Camera_ViewModeEnd = m_Camera.FindAction("ViewModeEnd", throwIfNotFound: true);
        m_Camera_ViewMove = m_Camera.FindAction("ViewMove", throwIfNotFound: true);
        // Menu
        m_Menu = asset.FindActionMap("Menu", throwIfNotFound: true);
        m_Menu_Close = m_Menu.FindAction("Close", throwIfNotFound: true);
        m_Menu_Decision = m_Menu.FindAction("Decision", throwIfNotFound: true);
        m_Menu_Back = m_Menu.FindAction("Back", throwIfNotFound: true);
        m_Menu_LeftSelect = m_Menu.FindAction("LeftSelect", throwIfNotFound: true);
        m_Menu_RightSelect = m_Menu.FindAction("RightSelect", throwIfNotFound: true);
        m_Menu_UpSelect = m_Menu.FindAction("UpSelect", throwIfNotFound: true);
        m_Menu_DownSelect = m_Menu.FindAction("DownSelect", throwIfNotFound: true);
        // Shortcut
        m_Shortcut = asset.FindActionMap("Shortcut", throwIfNotFound: true);
        m_Shortcut_ShortCut_1 = m_Shortcut.FindAction("ShortCut_1", throwIfNotFound: true);
        m_Shortcut_ShortCut_2 = m_Shortcut.FindAction("ShortCut_2", throwIfNotFound: true);
        m_Shortcut_ShortCut_3 = m_Shortcut.FindAction("ShortCut_3", throwIfNotFound: true);
        m_Shortcut_ShortCut_4 = m_Shortcut.FindAction("ShortCut_4", throwIfNotFound: true);
        // Debug
        m_Debug = asset.FindActionMap("Debug", throwIfNotFound: true);
        m_Debug_ReSet = m_Debug.FindAction("ReSet", throwIfNotFound: true);
        m_Debug_ReUpdate = m_Debug.FindAction("ReUpdate", throwIfNotFound: true);
        m_Debug_NextUpdate = m_Debug.FindAction("NextUpdate", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private List<IPlayerActions> m_PlayerActionsCallbackInterfaces = new List<IPlayerActions>();
    private readonly InputAction m_Player_Action;
    private readonly InputAction m_Player_LeftMove;
    private readonly InputAction m_Player_RightMove;
    private readonly InputAction m_Player_Jump;
    private readonly InputAction m_Player_MenuOpen;
    private readonly InputAction m_Player_ViewModeStart;
    private readonly InputAction m_Player_MagnetBoot;
    public struct PlayerActions
    {
        private @GameInputActions m_Wrapper;
        public PlayerActions(@GameInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Action => m_Wrapper.m_Player_Action;
        public InputAction @LeftMove => m_Wrapper.m_Player_LeftMove;
        public InputAction @RightMove => m_Wrapper.m_Player_RightMove;
        public InputAction @Jump => m_Wrapper.m_Player_Jump;
        public InputAction @MenuOpen => m_Wrapper.m_Player_MenuOpen;
        public InputAction @ViewModeStart => m_Wrapper.m_Player_ViewModeStart;
        public InputAction @MagnetBoot => m_Wrapper.m_Player_MagnetBoot;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Add(instance);
            @Action.started += instance.OnAction;
            @Action.performed += instance.OnAction;
            @Action.canceled += instance.OnAction;
            @LeftMove.started += instance.OnLeftMove;
            @LeftMove.performed += instance.OnLeftMove;
            @LeftMove.canceled += instance.OnLeftMove;
            @RightMove.started += instance.OnRightMove;
            @RightMove.performed += instance.OnRightMove;
            @RightMove.canceled += instance.OnRightMove;
            @Jump.started += instance.OnJump;
            @Jump.performed += instance.OnJump;
            @Jump.canceled += instance.OnJump;
            @MenuOpen.started += instance.OnMenuOpen;
            @MenuOpen.performed += instance.OnMenuOpen;
            @MenuOpen.canceled += instance.OnMenuOpen;
            @ViewModeStart.started += instance.OnViewModeStart;
            @ViewModeStart.performed += instance.OnViewModeStart;
            @ViewModeStart.canceled += instance.OnViewModeStart;
            @MagnetBoot.started += instance.OnMagnetBoot;
            @MagnetBoot.performed += instance.OnMagnetBoot;
            @MagnetBoot.canceled += instance.OnMagnetBoot;
        }

        private void UnregisterCallbacks(IPlayerActions instance)
        {
            @Action.started -= instance.OnAction;
            @Action.performed -= instance.OnAction;
            @Action.canceled -= instance.OnAction;
            @LeftMove.started -= instance.OnLeftMove;
            @LeftMove.performed -= instance.OnLeftMove;
            @LeftMove.canceled -= instance.OnLeftMove;
            @RightMove.started -= instance.OnRightMove;
            @RightMove.performed -= instance.OnRightMove;
            @RightMove.canceled -= instance.OnRightMove;
            @Jump.started -= instance.OnJump;
            @Jump.performed -= instance.OnJump;
            @Jump.canceled -= instance.OnJump;
            @MenuOpen.started -= instance.OnMenuOpen;
            @MenuOpen.performed -= instance.OnMenuOpen;
            @MenuOpen.canceled -= instance.OnMenuOpen;
            @ViewModeStart.started -= instance.OnViewModeStart;
            @ViewModeStart.performed -= instance.OnViewModeStart;
            @ViewModeStart.canceled -= instance.OnViewModeStart;
            @MagnetBoot.started -= instance.OnMagnetBoot;
            @MagnetBoot.performed -= instance.OnMagnetBoot;
            @MagnetBoot.canceled -= instance.OnMagnetBoot;
        }

        public void RemoveCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerActions @Player => new PlayerActions(this);

    // Magnet
    private readonly InputActionMap m_Magnet;
    private List<IMagnetActions> m_MagnetActionsCallbackInterfaces = new List<IMagnetActions>();
    private readonly InputAction m_Magnet_ShootAngle;
    private readonly InputAction m_Magnet_Shoot;
    private readonly InputAction m_Magnet_PowerCharge;
    private readonly InputAction m_Magnet_PoleSwitching;
    private readonly InputAction m_Magnet_Reset;
    public struct MagnetActions
    {
        private @GameInputActions m_Wrapper;
        public MagnetActions(@GameInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @ShootAngle => m_Wrapper.m_Magnet_ShootAngle;
        public InputAction @Shoot => m_Wrapper.m_Magnet_Shoot;
        public InputAction @PowerCharge => m_Wrapper.m_Magnet_PowerCharge;
        public InputAction @PoleSwitching => m_Wrapper.m_Magnet_PoleSwitching;
        public InputAction @Reset => m_Wrapper.m_Magnet_Reset;
        public InputActionMap Get() { return m_Wrapper.m_Magnet; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MagnetActions set) { return set.Get(); }
        public void AddCallbacks(IMagnetActions instance)
        {
            if (instance == null || m_Wrapper.m_MagnetActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_MagnetActionsCallbackInterfaces.Add(instance);
            @ShootAngle.started += instance.OnShootAngle;
            @ShootAngle.performed += instance.OnShootAngle;
            @ShootAngle.canceled += instance.OnShootAngle;
            @Shoot.started += instance.OnShoot;
            @Shoot.performed += instance.OnShoot;
            @Shoot.canceled += instance.OnShoot;
            @PowerCharge.started += instance.OnPowerCharge;
            @PowerCharge.performed += instance.OnPowerCharge;
            @PowerCharge.canceled += instance.OnPowerCharge;
            @PoleSwitching.started += instance.OnPoleSwitching;
            @PoleSwitching.performed += instance.OnPoleSwitching;
            @PoleSwitching.canceled += instance.OnPoleSwitching;
            @Reset.started += instance.OnReset;
            @Reset.performed += instance.OnReset;
            @Reset.canceled += instance.OnReset;
        }

        private void UnregisterCallbacks(IMagnetActions instance)
        {
            @ShootAngle.started -= instance.OnShootAngle;
            @ShootAngle.performed -= instance.OnShootAngle;
            @ShootAngle.canceled -= instance.OnShootAngle;
            @Shoot.started -= instance.OnShoot;
            @Shoot.performed -= instance.OnShoot;
            @Shoot.canceled -= instance.OnShoot;
            @PowerCharge.started -= instance.OnPowerCharge;
            @PowerCharge.performed -= instance.OnPowerCharge;
            @PowerCharge.canceled -= instance.OnPowerCharge;
            @PoleSwitching.started -= instance.OnPoleSwitching;
            @PoleSwitching.performed -= instance.OnPoleSwitching;
            @PoleSwitching.canceled -= instance.OnPoleSwitching;
            @Reset.started -= instance.OnReset;
            @Reset.performed -= instance.OnReset;
            @Reset.canceled -= instance.OnReset;
        }

        public void RemoveCallbacks(IMagnetActions instance)
        {
            if (m_Wrapper.m_MagnetActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IMagnetActions instance)
        {
            foreach (var item in m_Wrapper.m_MagnetActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_MagnetActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public MagnetActions @Magnet => new MagnetActions(this);

    // Camera
    private readonly InputActionMap m_Camera;
    private List<ICameraActions> m_CameraActionsCallbackInterfaces = new List<ICameraActions>();
    private readonly InputAction m_Camera_ViewModeEnd;
    private readonly InputAction m_Camera_ViewMove;
    public struct CameraActions
    {
        private @GameInputActions m_Wrapper;
        public CameraActions(@GameInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @ViewModeEnd => m_Wrapper.m_Camera_ViewModeEnd;
        public InputAction @ViewMove => m_Wrapper.m_Camera_ViewMove;
        public InputActionMap Get() { return m_Wrapper.m_Camera; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CameraActions set) { return set.Get(); }
        public void AddCallbacks(ICameraActions instance)
        {
            if (instance == null || m_Wrapper.m_CameraActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_CameraActionsCallbackInterfaces.Add(instance);
            @ViewModeEnd.started += instance.OnViewModeEnd;
            @ViewModeEnd.performed += instance.OnViewModeEnd;
            @ViewModeEnd.canceled += instance.OnViewModeEnd;
            @ViewMove.started += instance.OnViewMove;
            @ViewMove.performed += instance.OnViewMove;
            @ViewMove.canceled += instance.OnViewMove;
        }

        private void UnregisterCallbacks(ICameraActions instance)
        {
            @ViewModeEnd.started -= instance.OnViewModeEnd;
            @ViewModeEnd.performed -= instance.OnViewModeEnd;
            @ViewModeEnd.canceled -= instance.OnViewModeEnd;
            @ViewMove.started -= instance.OnViewMove;
            @ViewMove.performed -= instance.OnViewMove;
            @ViewMove.canceled -= instance.OnViewMove;
        }

        public void RemoveCallbacks(ICameraActions instance)
        {
            if (m_Wrapper.m_CameraActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ICameraActions instance)
        {
            foreach (var item in m_Wrapper.m_CameraActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_CameraActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public CameraActions @Camera => new CameraActions(this);

    // Menu
    private readonly InputActionMap m_Menu;
    private List<IMenuActions> m_MenuActionsCallbackInterfaces = new List<IMenuActions>();
    private readonly InputAction m_Menu_Close;
    private readonly InputAction m_Menu_Decision;
    private readonly InputAction m_Menu_Back;
    private readonly InputAction m_Menu_LeftSelect;
    private readonly InputAction m_Menu_RightSelect;
    private readonly InputAction m_Menu_UpSelect;
    private readonly InputAction m_Menu_DownSelect;
    public struct MenuActions
    {
        private @GameInputActions m_Wrapper;
        public MenuActions(@GameInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Close => m_Wrapper.m_Menu_Close;
        public InputAction @Decision => m_Wrapper.m_Menu_Decision;
        public InputAction @Back => m_Wrapper.m_Menu_Back;
        public InputAction @LeftSelect => m_Wrapper.m_Menu_LeftSelect;
        public InputAction @RightSelect => m_Wrapper.m_Menu_RightSelect;
        public InputAction @UpSelect => m_Wrapper.m_Menu_UpSelect;
        public InputAction @DownSelect => m_Wrapper.m_Menu_DownSelect;
        public InputActionMap Get() { return m_Wrapper.m_Menu; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MenuActions set) { return set.Get(); }
        public void AddCallbacks(IMenuActions instance)
        {
            if (instance == null || m_Wrapper.m_MenuActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_MenuActionsCallbackInterfaces.Add(instance);
            @Close.started += instance.OnClose;
            @Close.performed += instance.OnClose;
            @Close.canceled += instance.OnClose;
            @Decision.started += instance.OnDecision;
            @Decision.performed += instance.OnDecision;
            @Decision.canceled += instance.OnDecision;
            @Back.started += instance.OnBack;
            @Back.performed += instance.OnBack;
            @Back.canceled += instance.OnBack;
            @LeftSelect.started += instance.OnLeftSelect;
            @LeftSelect.performed += instance.OnLeftSelect;
            @LeftSelect.canceled += instance.OnLeftSelect;
            @RightSelect.started += instance.OnRightSelect;
            @RightSelect.performed += instance.OnRightSelect;
            @RightSelect.canceled += instance.OnRightSelect;
            @UpSelect.started += instance.OnUpSelect;
            @UpSelect.performed += instance.OnUpSelect;
            @UpSelect.canceled += instance.OnUpSelect;
            @DownSelect.started += instance.OnDownSelect;
            @DownSelect.performed += instance.OnDownSelect;
            @DownSelect.canceled += instance.OnDownSelect;
        }

        private void UnregisterCallbacks(IMenuActions instance)
        {
            @Close.started -= instance.OnClose;
            @Close.performed -= instance.OnClose;
            @Close.canceled -= instance.OnClose;
            @Decision.started -= instance.OnDecision;
            @Decision.performed -= instance.OnDecision;
            @Decision.canceled -= instance.OnDecision;
            @Back.started -= instance.OnBack;
            @Back.performed -= instance.OnBack;
            @Back.canceled -= instance.OnBack;
            @LeftSelect.started -= instance.OnLeftSelect;
            @LeftSelect.performed -= instance.OnLeftSelect;
            @LeftSelect.canceled -= instance.OnLeftSelect;
            @RightSelect.started -= instance.OnRightSelect;
            @RightSelect.performed -= instance.OnRightSelect;
            @RightSelect.canceled -= instance.OnRightSelect;
            @UpSelect.started -= instance.OnUpSelect;
            @UpSelect.performed -= instance.OnUpSelect;
            @UpSelect.canceled -= instance.OnUpSelect;
            @DownSelect.started -= instance.OnDownSelect;
            @DownSelect.performed -= instance.OnDownSelect;
            @DownSelect.canceled -= instance.OnDownSelect;
        }

        public void RemoveCallbacks(IMenuActions instance)
        {
            if (m_Wrapper.m_MenuActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IMenuActions instance)
        {
            foreach (var item in m_Wrapper.m_MenuActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_MenuActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public MenuActions @Menu => new MenuActions(this);

    // Shortcut
    private readonly InputActionMap m_Shortcut;
    private List<IShortcutActions> m_ShortcutActionsCallbackInterfaces = new List<IShortcutActions>();
    private readonly InputAction m_Shortcut_ShortCut_1;
    private readonly InputAction m_Shortcut_ShortCut_2;
    private readonly InputAction m_Shortcut_ShortCut_3;
    private readonly InputAction m_Shortcut_ShortCut_4;
    public struct ShortcutActions
    {
        private @GameInputActions m_Wrapper;
        public ShortcutActions(@GameInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @ShortCut_1 => m_Wrapper.m_Shortcut_ShortCut_1;
        public InputAction @ShortCut_2 => m_Wrapper.m_Shortcut_ShortCut_2;
        public InputAction @ShortCut_3 => m_Wrapper.m_Shortcut_ShortCut_3;
        public InputAction @ShortCut_4 => m_Wrapper.m_Shortcut_ShortCut_4;
        public InputActionMap Get() { return m_Wrapper.m_Shortcut; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(ShortcutActions set) { return set.Get(); }
        public void AddCallbacks(IShortcutActions instance)
        {
            if (instance == null || m_Wrapper.m_ShortcutActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_ShortcutActionsCallbackInterfaces.Add(instance);
            @ShortCut_1.started += instance.OnShortCut_1;
            @ShortCut_1.performed += instance.OnShortCut_1;
            @ShortCut_1.canceled += instance.OnShortCut_1;
            @ShortCut_2.started += instance.OnShortCut_2;
            @ShortCut_2.performed += instance.OnShortCut_2;
            @ShortCut_2.canceled += instance.OnShortCut_2;
            @ShortCut_3.started += instance.OnShortCut_3;
            @ShortCut_3.performed += instance.OnShortCut_3;
            @ShortCut_3.canceled += instance.OnShortCut_3;
            @ShortCut_4.started += instance.OnShortCut_4;
            @ShortCut_4.performed += instance.OnShortCut_4;
            @ShortCut_4.canceled += instance.OnShortCut_4;
        }

        private void UnregisterCallbacks(IShortcutActions instance)
        {
            @ShortCut_1.started -= instance.OnShortCut_1;
            @ShortCut_1.performed -= instance.OnShortCut_1;
            @ShortCut_1.canceled -= instance.OnShortCut_1;
            @ShortCut_2.started -= instance.OnShortCut_2;
            @ShortCut_2.performed -= instance.OnShortCut_2;
            @ShortCut_2.canceled -= instance.OnShortCut_2;
            @ShortCut_3.started -= instance.OnShortCut_3;
            @ShortCut_3.performed -= instance.OnShortCut_3;
            @ShortCut_3.canceled -= instance.OnShortCut_3;
            @ShortCut_4.started -= instance.OnShortCut_4;
            @ShortCut_4.performed -= instance.OnShortCut_4;
            @ShortCut_4.canceled -= instance.OnShortCut_4;
        }

        public void RemoveCallbacks(IShortcutActions instance)
        {
            if (m_Wrapper.m_ShortcutActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IShortcutActions instance)
        {
            foreach (var item in m_Wrapper.m_ShortcutActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_ShortcutActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public ShortcutActions @Shortcut => new ShortcutActions(this);

    // Debug
    private readonly InputActionMap m_Debug;
    private List<IDebugActions> m_DebugActionsCallbackInterfaces = new List<IDebugActions>();
    private readonly InputAction m_Debug_ReSet;
    private readonly InputAction m_Debug_ReUpdate;
    private readonly InputAction m_Debug_NextUpdate;
    public struct DebugActions
    {
        private @GameInputActions m_Wrapper;
        public DebugActions(@GameInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @ReSet => m_Wrapper.m_Debug_ReSet;
        public InputAction @ReUpdate => m_Wrapper.m_Debug_ReUpdate;
        public InputAction @NextUpdate => m_Wrapper.m_Debug_NextUpdate;
        public InputActionMap Get() { return m_Wrapper.m_Debug; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(DebugActions set) { return set.Get(); }
        public void AddCallbacks(IDebugActions instance)
        {
            if (instance == null || m_Wrapper.m_DebugActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_DebugActionsCallbackInterfaces.Add(instance);
            @ReSet.started += instance.OnReSet;
            @ReSet.performed += instance.OnReSet;
            @ReSet.canceled += instance.OnReSet;
            @ReUpdate.started += instance.OnReUpdate;
            @ReUpdate.performed += instance.OnReUpdate;
            @ReUpdate.canceled += instance.OnReUpdate;
            @NextUpdate.started += instance.OnNextUpdate;
            @NextUpdate.performed += instance.OnNextUpdate;
            @NextUpdate.canceled += instance.OnNextUpdate;
        }

        private void UnregisterCallbacks(IDebugActions instance)
        {
            @ReSet.started -= instance.OnReSet;
            @ReSet.performed -= instance.OnReSet;
            @ReSet.canceled -= instance.OnReSet;
            @ReUpdate.started -= instance.OnReUpdate;
            @ReUpdate.performed -= instance.OnReUpdate;
            @ReUpdate.canceled -= instance.OnReUpdate;
            @NextUpdate.started -= instance.OnNextUpdate;
            @NextUpdate.performed -= instance.OnNextUpdate;
            @NextUpdate.canceled -= instance.OnNextUpdate;
        }

        public void RemoveCallbacks(IDebugActions instance)
        {
            if (m_Wrapper.m_DebugActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IDebugActions instance)
        {
            foreach (var item in m_Wrapper.m_DebugActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_DebugActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public DebugActions @Debug => new DebugActions(this);
    private int m_KeyMouseSchemeIndex = -1;
    public InputControlScheme KeyMouseScheme
    {
        get
        {
            if (m_KeyMouseSchemeIndex == -1) m_KeyMouseSchemeIndex = asset.FindControlSchemeIndex("KeyMouse");
            return asset.controlSchemes[m_KeyMouseSchemeIndex];
        }
    }
    private int m_GamepadSchemeIndex = -1;
    public InputControlScheme GamepadScheme
    {
        get
        {
            if (m_GamepadSchemeIndex == -1) m_GamepadSchemeIndex = asset.FindControlSchemeIndex("Gamepad");
            return asset.controlSchemes[m_GamepadSchemeIndex];
        }
    }
    private int m_Gamepad_2SchemeIndex = -1;
    public InputControlScheme Gamepad_2Scheme
    {
        get
        {
            if (m_Gamepad_2SchemeIndex == -1) m_Gamepad_2SchemeIndex = asset.FindControlSchemeIndex("Gamepad_2");
            return asset.controlSchemes[m_Gamepad_2SchemeIndex];
        }
    }
    public interface IPlayerActions
    {
        void OnAction(InputAction.CallbackContext context);
        void OnLeftMove(InputAction.CallbackContext context);
        void OnRightMove(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnMenuOpen(InputAction.CallbackContext context);
        void OnViewModeStart(InputAction.CallbackContext context);
        void OnMagnetBoot(InputAction.CallbackContext context);
    }
    public interface IMagnetActions
    {
        void OnShootAngle(InputAction.CallbackContext context);
        void OnShoot(InputAction.CallbackContext context);
        void OnPowerCharge(InputAction.CallbackContext context);
        void OnPoleSwitching(InputAction.CallbackContext context);
        void OnReset(InputAction.CallbackContext context);
    }
    public interface ICameraActions
    {
        void OnViewModeEnd(InputAction.CallbackContext context);
        void OnViewMove(InputAction.CallbackContext context);
    }
    public interface IMenuActions
    {
        void OnClose(InputAction.CallbackContext context);
        void OnDecision(InputAction.CallbackContext context);
        void OnBack(InputAction.CallbackContext context);
        void OnLeftSelect(InputAction.CallbackContext context);
        void OnRightSelect(InputAction.CallbackContext context);
        void OnUpSelect(InputAction.CallbackContext context);
        void OnDownSelect(InputAction.CallbackContext context);
    }
    public interface IShortcutActions
    {
        void OnShortCut_1(InputAction.CallbackContext context);
        void OnShortCut_2(InputAction.CallbackContext context);
        void OnShortCut_3(InputAction.CallbackContext context);
        void OnShortCut_4(InputAction.CallbackContext context);
    }
    public interface IDebugActions
    {
        void OnReSet(InputAction.CallbackContext context);
        void OnReUpdate(InputAction.CallbackContext context);
        void OnNextUpdate(InputAction.CallbackContext context);
    }
}
